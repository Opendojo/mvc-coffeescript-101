// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(["jquery", "app/controller/screen1", "app/controller/screen2"], function($, Screen1Controller, Screen2Controller) {
  var Application;
  return Application = (function() {
    function Application() {
      this.bind = __bind(this.bind, this);
      this.listen = __bind(this.listen, this);
      this.Screen1 = new Screen1Controller();
      this.Screen2 = new Screen2Controller();
    }

    Application.prototype.launch = function() {
      this.listen();
      return this.bind();
    };

    Application.prototype.listen = function() {
      console.log("Listening");
      return $('body').on("application", (function(_this) {
        return function(e) {
          console.log("Event received");
          if (e.action) {
            return _this.dispatch(e);
          }
        };
      })(this));
    };

    Application.prototype.bind = function() {
      $('.js-screen1-trigger').on("click", function() {
        var e;
        e = new $.Event("application");
        e.action = "screen1";
        return $('body').trigger(e);
      });
      return $('.js-screen2-trigger').on("click", function() {
        var e;
        e = new $.Event("application");
        e.action = "screen2";
        return $('body').trigger(e);
      });
    };

    Application.prototype.dispatch = function(event) {
      if (event.action != null) {
        if (event.action === 'screen1') {
          this.Screen1.show();
          this.Screen2.hide();
        }
        if (event.action === 'screen2') {
          this.Screen2.show();
          return this.Screen1.hide();
        }
      }
    };

    return Application;

  })();
});
